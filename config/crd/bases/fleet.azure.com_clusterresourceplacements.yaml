
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: clusterresourceplacements.fleet.azure.com
spec:
  group: fleet.azure.com
  names:
    categories:
    - fleet-workload
    kind: ClusterResourcePlacement
    listKind: ClusterResourcePlacementList
    plural: clusterresourceplacements
    shortNames:
    - crp
    singular: clusterresourceplacement
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'ClusterResourcePlacement is used to place cluster scoped resources
          or ALL the resources in a namespace onto one or more member clusters in
          a fleet. Users cannot select resources in a system reserved namespace. System
          reserved namespaces are: kube-system, fleet-system, fleet-work-*.'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec represents the desired behavior of ClusterResourcePlacement.
            properties:
              policy:
                description: Policy represents the placement policy to select clusters
                  to place all the selected resources. Default is place to the entire
                  fleet if this field is omitted.
                properties:
                  affinity:
                    description: Affinity represents the selected resources' scheduling
                      constraints. If not set, the entire fleet can be scheduling
                      candidate.
                    properties:
                      clusterAffinity:
                        description: ClusterAffinity describes cluster affinity scheduling
                          rules for the resources.
                        properties:
                          clusterSelectorTerms:
                            description: ClusterSelectorTerms is a list of cluster
                              selector terms. The terms are `ORed`. kubebuilder:validation:MaxItems=10
                            items:
                              description: ClusterSelectorTerm represents the requirements
                                to selected clusters.
                              properties:
                                labelSelector:
                                  description: LabelSelector is the requirements by
                                    cluster's labels.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                              required:
                              - labelSelector
                              type: object
                            type: array
                        type: object
                    type: object
                  clusterNames:
                    description: ClusterNames is a request to schedule the selected
                      resource to a list of member clusters. If exists, we only place
                      the resources within the clusters in this list. kubebuilder:validation:MaxItems=100
                    items:
                      type: string
                    type: array
                type: object
              resourceSelectors:
                description: ResourceSelectors is used to select cluster scoped resources.
                  The selectors are `ORed`. kubebuilder:validation:MaxItems=100
                items:
                  description: 'ClusterResourceSelector is used to specify cluster
                    scoped resources to be selected. Note: When the cluster resource
                    is of type `namespace`, ALL the resources in this namespace are
                    selected. All the fields present in this structure are `ANDed`.'
                  properties:
                    group:
                      description: Group is the group name of the target resource.
                      type: string
                    kind:
                      description: 'Kind is the kind of the target resources. Note:
                        When the `kind` field is `namespace` then all the resources
                        inside that namespace is selected.'
                      type: string
                    labelSelector:
                      description: labelSelector spells out a label query over a set
                        of resources. This field is mutually exclusive with the `name`
                        field.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                    name:
                      description: Name is the name of the target resource. Default
                        is empty, which means selecting all resources. This field
                        is mutually exclusive with the `labelSelector` field.
                      type: string
                    version:
                      description: Version is the version of the target resource.
                      type: string
                  required:
                  - group
                  - kind
                  - version
                  type: object
                type: array
            required:
            - resourceSelectors
            type: object
          status:
            description: Most recently observed status of the ClusterResourcePlacement.
            properties:
              conditions:
                description: Conditions field contains the overall condition statuses
                  for this resource.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              failedPlacements:
                description: FailedResourcePlacements is a list of all failed to place
                  resources status. kubebuilder:validation:MaxItems=1000
                items:
                  description: FailedResourcePlacement shows the failure details of
                    a failed resource placement.
                  properties:
                    clusterName:
                      description: ClusterName is the name of the cluster that this
                        resource is placed on.
                      type: string
                    condition:
                      description: Condition contains the failed condition status
                        for this failed to place resource.
                      properties:
                        lastTransitionTime:
                          description: lastTransitionTime is the last time the condition
                            transitioned from one status to another. This should be
                            when the underlying condition changed.  If that is not
                            known, then using the time when the API field changed
                            is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: message is a human readable message indicating
                            details about the transition. This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: observedGeneration represents the .metadata.generation
                            that the condition was set based upon. For instance, if
                            .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                            is 9, the condition is out of date with respect to the
                            current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: reason contains a programmatic identifier indicating
                            the reason for the condition's last transition. Producers
                            of specific condition types may define expected values
                            and meanings for this field, and whether the values are
                            considered a guaranteed API. The value should be a CamelCase
                            string. This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False,
                            Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            --- Many .condition.type values are consistent across
                            resources like Available, but because arbitrary conditions
                            can be useful (see .node.status.conditions), the ability
                            to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    group:
                      description: Group is the group name of the selected resource.
                      type: string
                    kind:
                      description: Kind represents the Kind of the selected resources.
                      type: string
                    name:
                      description: Name of the target resource.
                      type: string
                    namespace:
                      description: Namespace is the namespace of the resource, the
                        resource is cluster scoped if the value is empty.
                      type: string
                    version:
                      description: Version is the version of the selected resource.
                      type: string
                  required:
                  - clusterName
                  - condition
                  - kind
                  - name
                  type: object
                type: array
              selectedResources:
                description: SelectedResources is a list of the resources the resource
                  selector selects.
                items:
                  description: ResourceIdentifier points to one resource we selected
                  properties:
                    group:
                      description: Group is the group name of the selected resource.
                      type: string
                    kind:
                      description: Kind represents the Kind of the selected resources.
                      type: string
                    name:
                      description: Name of the target resource.
                      type: string
                    namespace:
                      description: Namespace is the namespace of the resource, the
                        resource is cluster scoped if the value is empty.
                      type: string
                    version:
                      description: Version is the version of the selected resource.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                type: array
              targetClusters:
                description: TargetClusters is a list of cluster names that this resource
                  should run on.
                items:
                  type: string
                type: array
            required:
            - conditions
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
