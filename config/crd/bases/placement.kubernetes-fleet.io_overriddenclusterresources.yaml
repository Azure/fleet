---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.4
  name: overriddenclusterresources.placement.kubernetes-fleet.io
spec:
  group: placement.kubernetes-fleet.io
  names:
    categories:
    - fleet
    - fleet-placement
    kind: OverriddenClusterResource
    listKind: OverriddenClusterResourceList
    plural: overriddenclusterresources
    singular: overriddenclusterresource
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.generation
      name: Gen
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpah1
    schema:
      openAPIV3Schema:
        description: "OverriddenClusterResource is used to store the result of cluster
          scoped resources after overridden on the target cluster. Once the snapshot
          has been overridden by the system, the manifest won't be updated because
          of the cluster label change (e.g the override rules are not apply to the
          target cluster anymore). To make the changes effective, you need to update
          the resource or its related override. \n Its spec is immutable. We may need
          to produce more than one overriddenClusterResource for all the resources
          a placement selected to get around the 1MB size limit of k8s objects. The
          naming convention of a overriddenClusterResourceSnapshot is {clusterResourceSnapshotName}-{targetCluster}-{random-suffix}.
          Each snapshot MUST have the following labels: - `CRPTrackingLabel` which
          points to its owner CRP. - `TargetClusterLabel` which points where to place
          the overridden resources."
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: The desired state of OverriddenResourceSpec.
            properties:
              resourceOverrides:
                description: ResourceOverrides is a list of ClusterResourceOverrides
                  or ResourceOverrides associated with the selected resources.
                items:
                  description: OverrideSnapshotIdentifier defines the identity of
                    an override snapshot.
                  properties:
                    name:
                      description: Name is the name of the override snapshot.
                      type: string
                    namespace:
                      description: Namespace of the override snapshot.
                      type: string
                    type:
                      default: ClusterResourceOverride
                      description: Type of override snapshot. Can be "ClusterResourceOverride",
                        or "ResourceOverride". Default is ClusterResourceOverride.
                      enum:
                      - ClusterResourceOverride
                      - ResourceOverride
                      type: string
                  required:
                  - name
                  type: object
                type: array
              resourceOverridesHash:
                description: ResourceOverridesHash is the sha-256 hash value of the
                  ResourceOverrides field.
                format: byte
                type: string
              resourceSnapshot:
                description: ResourceSnapshot is the name of the master resource snapshot
                  within a group.
                type: string
            required:
            - resourceOverrides
            - resourceOverridesHash
            - resourceSnapshot
            type: object
          status:
            description: The observed status of OverriddenClusterResource.
            properties:
              conditions:
                description: Conditions is an array of current observed conditions
                  for selected resources and their overrides. The type is Valid to
                  indicate whether the resources are valid or not to be overridden.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              numberOfSnapshots:
                default: 1
                description: NumberOfSnapshots indicates how many snapshots are created
                  within the same group and generated from the same clusterResourceSnapshot
                  and its overrides.
                type: integer
              workload:
                description: Workload represents the manifest workload to be deployed.
                properties:
                  manifests:
                    description: Manifests represents a list of kuberenetes resources
                      to be deployed on the spoke cluster.
                    items:
                      description: Manifest represents a resource to be deployed on
                        spoke cluster.
                      type: object
                      x-kubernetes-embedded-resource: true
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
