---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.4
  name: resourceoverrides.placement.kubernetes-fleet.io
spec:
  group: placement.kubernetes-fleet.io
  names:
    categories:
    - fleet
    - fleet-placement
    kind: ResourceOverride
    listKind: ResourceOverrideList
    plural: resourceoverrides
    singular: resourceoverride
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ResourceOverride defines a group of override policies about how
          to override the selected namespaced scope resources to target clusters.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: The desired state of ResourceOverrideSpec.
            properties:
              policy:
                description: Policy defines how to override the selected resources
                  on the target clusters.
                properties:
                  overrideRules:
                    description: OverrideRules defines an array of override rules
                      to be applied on the selected resources. The order of the rules
                      determines the override order. When there are two rules selecting
                      the same fields on the target cluster, the last one will win.
                      You can have 1-20 rules.
                    items:
                      description: OverrideRule defines how to override the selected
                        resources on the target clusters.
                      properties:
                        clusterSelector:
                          description: ClusterSelectors selects the target clusters.
                            The resources will be overridden before applying to the
                            matching clusters. If ClusterSelector is not set, it means
                            selecting ALL the member clusters.
                          properties:
                            clusterSelectorTerms:
                              description: ClusterSelectorTerms is a list of cluster
                                selector terms. The terms are `ORed`.
                              items:
                                description: ClusterSelectorTerm contains the requirements
                                  to select clusters.
                                properties:
                                  labelSelector:
                                    description: LabelSelector is a label query over
                                      all the joined member clusters. Clusters matching
                                      the query are selected. If you specify both
                                      label and metric selectors in the same term,
                                      the results are AND'd.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  metricSelector:
                                    description: MetricSelector is a metric query
                                      over all joined member clusters. Clusters matching
                                      the query are selected. If you specify both
                                      label and metric selectors in the same term,
                                      the results are AND'd.
                                    properties:
                                      matchMetrics:
                                        description: MatchMetrics is an array of MetricMatchers.
                                          The requirements are AND'd.
                                        items:
                                          description: MetricMatcher is a specific
                                            metric requirement when picking clusters
                                            for resource placement.
                                          properties:
                                            name:
                                              description: Name is the name of the
                                                metric; it should be a Kubernetes
                                                label name.
                                              type: string
                                            range:
                                              description: Range are the required
                                                or preferred range for the metric.
                                              items:
                                                description: MetricRange describes
                                                  a required or preferred range for
                                                  a metric.
                                                properties:
                                                  interpolate:
                                                    default: DoNotInterpolate
                                                    description: "Interpolate is the
                                                      interpolation order for the
                                                      metric range. \n Specify this
                                                      value if you would like Fleet
                                                      to perform linear interpolation
                                                      of weights for clusters with
                                                      a metric value in the given
                                                      range. \n Use the FromMinimum
                                                      option if you would like to
                                                      perfer clusters with a lower
                                                      metric value; on the contrast,
                                                      use the FromMaximum option if
                                                      you would like to prefer clusters
                                                      with a higher metric value.
                                                      \n The default option is DoNotInterpolate,
                                                      which means that all clusters
                                                      with a metric value in the preferred
                                                      range will be assigned the same
                                                      weight."
                                                    type: string
                                                  maximum:
                                                    description: Maximum is the maximum
                                                      value of the range. If this
                                                      value is not specified, the
                                                      largest observed value of the
                                                      metric will be used. At least
                                                      one of the minimum of maximum
                                                      value must be specified.
                                                    type: string
                                                  minimum:
                                                    description: Minimum is the minimum
                                                      value of the range. If this
                                                      value is not specified, the
                                                      smallest observed value of the
                                                      metric will be used. At least
                                                      one of the minimum or maximum
                                                      value must be specified.
                                                    type: string
                                                  minimumWeight:
                                                    default: 0
                                                    description: "MinimumWeight is
                                                      the minimum weight to assign
                                                      to a cluster in the perferred
                                                      range. \n This value is only
                                                      used when linear interpolation
                                                      is enabled, i.e., the value
                                                      of Interpolate is set to FromMinimum
                                                      or FromMaximum. \n When this
                                                      field is set and interpolation
                                                      starts from the minimum, the
                                                      minimum weight will be assigned
                                                      to the cluster with the maximum
                                                      value in the range; and when
                                                      interpolation starts from the
                                                      maximum, the minimum weight
                                                      will be assigned to the cluster
                                                      with the minimum value in the
                                                      range. \n Note that if you do
                                                      not specify this value but choose
                                                      to use weight interpolation,
                                                      Fleet will use 0 as the minimum
                                                      weight. Also, this value must
                                                      be smaller than the weight value."
                                                    format: int32
                                                    type: integer
                                                type: object
                                              type: array
                                          required:
                                          - name
                                          - range
                                          type: object
                                        type: array
                                    required:
                                    - matchMetrics
                                    type: object
                                required:
                                - labelSelector
                                type: object
                              maxItems: 10
                              type: array
                          required:
                          - clusterSelectorTerms
                          type: object
                        jsonPatchOverrides:
                          description: JSONPatchOverrides defines a list of JSON patch
                            override rules.
                          items:
                            description: JSONPatchOverride applies a JSON patch on
                              the selected resources following [RFC 6902](https://datatracker.ietf.org/doc/html/rfc6902).
                            properties:
                              operator:
                                description: Operator defines the operation on the
                                  target field.
                                enum:
                                - Add
                                - Remove
                                - Replace
                                type: string
                              path:
                                description: 'Path defines the target location. Note:
                                  override will fail if the resource path does not
                                  exist.'
                                type: string
                              value:
                                description: Value defines the content to be applied
                                  on the target location. Value should be empty when
                                  operator is Remove.
                                type: string
                            required:
                            - operator
                            - path
                            type: object
                          maxItems: 20
                          minItems: 1
                          type: array
                      required:
                      - jsonPatchOverrides
                      type: object
                    maxItems: 20
                    minItems: 1
                    type: array
                required:
                - overrideRules
                type: object
              resourceSelectors:
                description: ResourceSelectors is an array of selectors used to select
                  namespace scoped resources. The selectors are `ORed`. You can have
                  1-20 selectors.
                items:
                  description: ResourceSelector is used to select namespace scoped
                    resources as the target resources to be placed. All the fields
                    are `ANDed`. In other words, a resource must match all the fields
                    to be selected. The resource namespace will inherit from the parent
                    object scope.
                  properties:
                    group:
                      description: Group name of the namespace-scoped resource. Use
                        an empty string to select resources under the core API group
                        (e.g., services).
                      type: string
                    kind:
                      description: Kind of the namespace-scoped resource.
                      type: string
                    name:
                      description: Name of the namespace-scoped resource.
                      type: string
                    version:
                      description: Version of the namespace-scoped resource.
                      type: string
                  required:
                  - group
                  - kind
                  - name
                  - version
                  type: object
                maxItems: 20
                minItems: 1
                type: array
            required:
            - policy
            - resourceSelectors
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
