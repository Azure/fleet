
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: internalserviceexports.networking.fleet.azure.com
spec:
  group: networking.fleet.azure.com
  names:
    categories:
      - fleet-networking
    kind: InternalServiceExport
    listKind: InternalServiceExportList
    plural: internalserviceexports
    shortNames:
      - internalsvcexport
    singular: internalserviceexport
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: InternalServiceExport is a data transport type that member clusters
            in the fleet use to upload the spec of exported Service to the hub cluster.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: InternalServiceExportSpec specifies the spec of an exported
                Service; at this stage only the ports of an exported Service are sync'd.
              properties:
                ports:
                  description: A list of ports exposed by the exported Service.
                  items:
                    description: ServicePort represents the port on which the service
                      is exposed.
                    properties:
                      appProtocol:
                        description: The application protocol for this port. This field
                          follows standard Kubernetes label syntax. Un-prefixed names
                          are reserved for IANA standard service names (as per RFC-6335
                          and http://www.iana.org/assignments/service-names). Non-standard
                          protocols should use prefixed names such as mycompany.com/my-custom-protocol.
                          Field can be enabled with ServiceAppProtocol feature gate.
                        type: string
                      name:
                        description: The name of this port within the service. This
                          must be a DNS_LABEL. All ports within a ServiceSpec must have
                          unique names. When considering the endpoints for a Service,
                          this must match the 'name' field in the EndpointPort. Optional
                          if only one ServicePort is defined on this service.
                        type: string
                      port:
                        description: The port that will be exposed by this service.
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                      protocol:
                        default: TCP
                        description: The IP protocol for this port. Supports "TCP",
                          "UDP", and "SCTP". Default is TCP.
                        enum:
                          - TCP
                          - UDP
                          - SCTP
                        type: string
                      targetPort:
                        anyOf:
                          - type: integer
                          - type: string
                        description: The port to access on the pods targeted by the
                          service.
                        x-kubernetes-int-or-string: true
                    required:
                      - port
                    type: object
                  type: array
                  x-kubernetes-list-type: atomic
                serviceReference:
                  description: The reference to the source Service.
                  properties:
                    apiVersion:
                      description: The API version of the referred object.
                      type: string
                    clusterId:
                      description: The ID of the cluster where the object is exported.
                      type: string
                    exportedSince:
                      description: The timestamp from a local clock when the generation
                        of the object is exported. This field is marked as optional
                        for backwards compatibility reasons.
                      format: date-time
                      type: string
                    generation:
                      description: The generation of the referred object.
                      format: int64
                      type: integer
                    kind:
                      description: The kind of the referred object.
                      type: string
                    name:
                      description: The name of the referred object.
                      type: string
                    namespace:
                      description: The namespace of the referred object.
                      type: string
                    namespacedName:
                      description: The namespaced name of the referred object.
                      type: string
                    resourceVersion:
                      description: The resource version of the referred object.
                      type: string
                    uid:
                      description: The UID of the referred object.
                      type: string
                  required:
                    - clusterId
                    - generation
                    - kind
                    - name
                    - namespace
                    - namespacedName
                    - resourceVersion
                    - uid
                  type: object
              required:
                - ports
                - serviceReference
              type: object
            status:
              description: InternalServiceExportStatus contains the current status of
                an InternalServiceExport.
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n \ttype FooStatus struct{ \t    // Represents the observations
                    of a foo's current state. \t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\" \t    //
                    +patchMergeKey=type \t    // +patchStrategy=merge \t    // +listType=map
                    \t    // +listMapKey=type \t    Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n \t    // other fields
                    \t}"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be when
                          the underlying condition changed.  If that is not known, then
                          using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if .metadata.generation
                          is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
